/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.0.27
 * Generated at: 2024-02-19 01:04:37 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.rentcar;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;

public final class carInsert_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("jar:file:/C:/Users/TJ/.m2/repository/org/mortbay/jasper/taglibs-standard/10.0.0-M10/taglibs-standard-10.0.0-M10.jar!/META-INF/c.tld", Long.valueOf(1425946270000L));
    _jspx_dependants.put("/WEB-INF/lib/taglibs-standard-10.0.0-M10.jar", Long.valueOf(1606154388000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fif_0026_005ftest;

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.release();
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("<head><title>FileUpload</title>\r\n");
      out.write("  <script src=\"http://code.jquery.com/jquery-latest.min.js\"></script>\r\n");
      out.write("  <style>\r\n");
      out.write("      .insertBox{\r\n");
      out.write("          margin: auto;\r\n");
      out.write("      }\r\n");
      out.write("\r\n");
      out.write("      .btnGroup > .btn-submit {\r\n");
      out.write("          background-color : oklch(0.4912 0.3096 275.75) !important;\r\n");
      out.write("      }\r\n");
      out.write("\r\n");
      out.write("      .btnGroup > .btn-submit:hover {\r\n");
      out.write("          background-color : oklab(0.44208 0.0279164 -0.277238) !important;\r\n");
      out.write("      }\r\n");
      out.write("\r\n");
      out.write("      .btnGroup > .btn-upload {\r\n");
      out.write("          background-color : oklch(0.6971 0.329 342.55) !important;\r\n");
      out.write("      }\r\n");
      out.write("\r\n");
      out.write("      .btnGroup > .btn-upload:hover {\r\n");
      out.write("          background-color : oklab(0.62739 0.282473 -0.0887925) !important;\r\n");
      out.write("      }\r\n");
      out.write("      .body{\r\n");
      out.write("          display: flex;\r\n");
      out.write("          flex-direction: column;\r\n");
      out.write("      }\r\n");
      out.write("  </style>\r\n");
      out.write("</head>\r\n");
      if (_jspx_meth_c_005fif_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("<span class=\"text-red-500\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${errorMessage }", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</span>\r\n");
      out.write("<form name=\"fileForm\" method=\"post\" action=\"insertCar.do\" onsubmit=\"insertSubmit(this); return false;\">\r\n");
      out.write("  <div class=\"insertBox p-6 max-w-sm mx-auto bg-white rounded-xl shadow-md flex items-center space-x-4\">\r\n");
      out.write("    <div>\r\n");
      out.write("      <h3 class=\"text-xl\">차량 등록</h3>\r\n");
      out.write("      <p class=\"text-gray-500\">이름 : <input type=\"text\" name=\"name\" class=\"form-input mt-1 block w-full\"/></p>\r\n");
      out.write("      <p class=\"text-gray-500\">카테고리 :\r\n");
      out.write("        <select name=\"category\" class=\"form-select mt-1 block w-full\">\r\n");
      out.write("          <option value=\"소형\">소형</option>\r\n");
      out.write("          <option value=\"중형\">중형</option>\r\n");
      out.write("          <option value=\"대형\">대형</option>\r\n");
      out.write("        </select>\r\n");
      out.write("      </p>\r\n");
      out.write("      <p class=\"text-gray-500\">가격 : <input type=\"text\" name=\"price\" class=\"form-input bordered mt-1 block w-full\"/></p>\r\n");
      out.write("      <p class=\"text-gray-500\">승차인원 : <input type=\"text\" name=\"usepeople\" class=\"form-input bordered mt-1 block w-full\"/></p>\r\n");
      out.write("      <p class=\"text-gray-500\">총수량 : <input type=\"text\" name=\"totalQty\" class=\"form-input bordered mt-1 block w-full\"/></p>\r\n");
      out.write("      <p class=\"text-gray-500\">차량 회사 정보 : <input type=\"text\" name=\"company\" class=\"form-input bordered mt-1 block w-full\"/></p>\r\n");
      out.write("      <p class=\"text-gray-500\">이미지 : <input type=\"file\" id=\"img\" name=\"img\" class=\"form-input bordered mt-1 block w-full\"/></p>\r\n");
      out.write("      <p class=\"text-gray-500\">차량 정보 : <input type=\"text\" name=\"info\" class=\"form-input mt-1 bordered block w-full\"/></p>\r\n");
      out.write("      <div class=\"mt-4 btnGroup\">\r\n");
      out.write("        <input type=\"submit\" id=\"submitBtn\" value=\"전송하기\" class=\"btn btn-primary btn-submit\"/>\r\n");
      out.write("        <input type=\"button\" id=\"imgBtn\" value=\"이미지 업로드하기\" class=\"btn btn-secondary btn-upload ml-2\"/>\r\n");
      out.write("      </div>\r\n");
      out.write("    </div>\r\n");
      out.write("  </div>\r\n");
      out.write("</form>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
      out.write("<script>\r\n");
      out.write("  let check =false;\r\n");
      out.write("  function insertSubmit(form){\r\n");
      out.write("    if (!check) {\r\n");
      out.write("      alert(\"이미지를 업로드해주세요\");\r\n");
      out.write("      $(\"#img\").focus();\r\n");
      out.write("      $(\"#img\").css(\"border\", \"\");\r\n");
      out.write("      return;\r\n");
      out.write("    }\r\n");
      out.write("    form.submit();\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("  $(\"#imgBtn\").click(function() {\r\n");
      out.write("    // 이미지 파일 가져오기\r\n");
      out.write("    let ofile = $(\"#img\")[0].files[0];\r\n");
      out.write("\r\n");
      out.write("    if (!ofile) {\r\n");
      out.write("      alert(\"이미지를 첨부해주세요\");\r\n");
      out.write("      $(\"#img\").focus();\r\n");
      out.write("      $(\"#img\").css(\"border\", \"\");\r\n");
      out.write("      return;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    // FormData 객체 생성\r\n");
      out.write("    let formData = new FormData();\r\n");
      out.write("    formData.append(\"ofile\", ofile);\r\n");
      out.write("\r\n");
      out.write("    $.ajax({\r\n");
      out.write("      type: \"POST\",\r\n");
      out.write("      url: \"uploadCarImg.do\",\r\n");
      out.write("      data: formData,\r\n");
      out.write("      contentType: false,\r\n");
      out.write("      processData: false,\r\n");
      out.write("      success: function(data) {\r\n");
      out.write("        if (data) {\r\n");
      out.write("          alert(\"업로드 성공\");\r\n");
      out.write("          check = true;\r\n");
      out.write("        } else {\r\n");
      out.write("          alert(\"이미지를 확인해주세요.\");\r\n");
      out.write("          $(\"#img\").val(\"\");\r\n");
      out.write("          check = false;\r\n");
      out.write("        }\r\n");
      out.write("      }\r\n");
      out.write("    });\r\n");
      out.write("  });\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fif_005f0(jakarta.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    jakarta.servlet.jsp.PageContext pageContext = _jspx_page_context;
    jakarta.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f0 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f0_reused = false;
    try {
      _jspx_th_c_005fif_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f0.setParent(null);
      // /WEB-INF/rentcar/carInsert.jsp(34,0) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sessionScope.id ne 'ADMIN'}", boolean.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f0 = _jspx_th_c_005fif_005f0.doStartTag();
      if (_jspx_eval_c_005fif_005f0 != jakarta.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("  <script type=\"text/javascript\">\r\n");
          out.write("    alert(\"관리자 권한이 없습니다.\");\r\n");
          out.write("    location.href = 'main.do';\r\n");
          out.write("  </script>\r\n");
          int evalDoAfterBody = _jspx_th_c_005fif_005f0.doAfterBody();
          if (evalDoAfterBody != jakarta.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f0.doEndTag() == jakarta.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f0);
      _jspx_th_c_005fif_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f0_reused);
    }
    return false;
  }
}
